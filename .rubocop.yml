require: rubocop-rails

AllCops:
  DisplayCopNames: true
  Exclude:
    - 'bin/**/*'
    - 'coverage/**/*'
    - 'db/**/*'
    - 'log/**/*'
    - 'public/**/*'
    - 'tmp/**/*'
    - 'vendor/**/*'

Rails/DynamicFindBy:
  Enabled: false

# This cop has poor handling for the common case of a lambda arg in a DSL
Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/AmbiguousOperator:
  Enabled: false

Style/Alias:
  EnforcedStyle: prefer_alias_method

Layout/HashAlignment:
  Enabled: false

Style/Documentation:
  Enabled: false

Style/DoubleNegation:
  Enabled: false

# auto-correct is broken for this cop:
# https://github.com/bbatsov/rubocop/issues/3271
Style/EachForSimpleLoop:
  AutoCorrect: false

Style/EachWithObject:
  Enabled: false

Layout/EmptyLines:
  Enabled: false

Layout/EmptyLinesAroundBlockBody:
  Enabled: false

Layout/EmptyLinesAroundClassBody:
  Enabled: false

Layout/EmptyLinesAroundModuleBody:
  Enabled: false

Layout/EmptyLinesAroundMethodBody:
  Enabled: false

Style/EmptyLiteral:
  Enabled: false

Style/EmptyMethod:
  Enabled: false

# The Exclude list is not additive. Projects that exclude file names will
# need to re-add Appraisals.
Naming/FileName:
  Exclude:
    - 'Appraisals'

Style/FrozenStringLiteralComment:
  Enabled: false

Style/GuardClause:
  Enabled: false

# does not make sense to enable this without AlignHash
Layout/FirstHashElementIndentation:
  Enabled: false

Style/Lambda:
  Enabled: false

Style/ModuleFunction:
  EnforcedStyle: extend_self

Style/MultilineBlockChain:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  Enabled: false

Layout/MultilineOperationIndentation:
  Enabled: false

Layout/MultilineBlockLayout:
  Enabled: false

# Disabling line length enforcement since annotate generates
# some pretty long lines
Layout/LineLength:
  Enabled: false

# This cop complains about values like 05.
Style/NumericLiteralPrefix:
  Enabled: false

# This cop is problematic when nil may be compared with 0.
Style/NumericPredicate:
  Enabled: false

# This cop is unstable.
Style/PercentLiteralDelimiters:
  Enabled: false

Style/Proc:
  Enabled: false

Style/RaiseArgs:
  EnforcedStyle: compact

Style/RegexpLiteral:
  Enabled: false

Style/SafeNavigation:
  Enabled: false

Style/SignalException:
  EnforcedStyle: only_raise

Style/SingleLineBlockParams:
  Enabled: false

# This cop doesn't work properly if you a have a block with
# arguments split across multiple lines
Layout/SpaceAroundBlockParameters:
  Enabled: false

Style/StringLiterals:
  EnforcedStyle: single_quotes
  Exclude:
    - 'spec/**/*'

# We don't require %i() for an array of symbols.
Style/SymbolArray:
  Enabled: false

Naming/VariableNumber:
  Enabled: false

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Enabled: false

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Enabled: false

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Enabled: false

Metrics/ParameterLists:
  Enabled: false

Metrics/PerceivedComplexity:
  Enabled: false

Rails:
  Enabled: true

Rails/HttpPositionalArguments:
  Enabled: true

Rails/UniqBeforePluck:
  EnforcedStyle: aggressive

# This cop is too greedy I dont
# want to underscore my timestamps.
Style/NumericLiterals:
  Enabled: false

Style/StructInheritance:
  Enabled: false

Rails/TimeZone:
  Enabled: false

Layout/BeginEndAlignment: # (new in 0.91)
  Enabled: true
Layout/EmptyLinesAroundAttributeAccessor: # (new in 0.83)
  Enabled: true
Layout/SpaceAroundMethodCallOperator: # (new in 0.82)
  Enabled: true
Lint/BinaryOperatorWithIdenticalOperands: # (new in 0.89)
  Enabled: true
Lint/ConstantDefinitionInBlock: # (new in 0.91)
  Enabled: true
Lint/DeprecatedOpenSSLConstant: # (new in 0.84)
  Enabled: true
Lint/DuplicateElsifCondition: # (new in 0.88)
  Enabled: true
Lint/DuplicateRequire: # (new in 0.90)
  Enabled: true
Lint/DuplicateRescueException: # (new in 0.89)
  Enabled: true
Lint/EmptyConditionalBody: # (new in 0.89)
  Enabled: true
Lint/EmptyFile: # (new in 0.90)
  Enabled: true
Lint/FloatComparison: # (new in 0.89)
  Enabled: true
Lint/HashCompareByIdentity: # (new in 0.93)
  Enabled: true
Lint/IdentityComparison: # (new in 0.91)
  Enabled: true
Lint/MissingSuper: # (new in 0.89)
  Enabled: true
Lint/MixedRegexpCaptureTypes: # (new in 0.85)
  Enabled: true
Lint/OutOfRangeRegexpRef: # (new in 0.89)
  Enabled: true
Lint/RaiseException: # (new in 0.81)
  Enabled: true
Lint/RedundantSafeNavigation: # (new in 0.93)
  Enabled: true
Lint/SelfAssignment: # (new in 0.89)
  Enabled: true
Lint/StructNewOverride: # (new in 0.81)
  Enabled: true
Lint/TopLevelReturnWithArgument: # (new in 0.89)
  Enabled: true
Lint/TrailingCommaInAttributeDeclaration: # (new in 0.90)
  Enabled: true
Lint/UnreachableLoop: # (new in 0.89)
  Enabled: true
Lint/UselessMethodDefinition: # (new in 0.90)
  Enabled: true
Lint/UselessTimes: # (new in 0.91)
  Enabled: true
Style/AccessorGrouping: # (new in 0.87)
  Enabled: true
Style/BisectedAttrAccessor: # (new in 0.87)
  Enabled: true
Style/CaseLikeIf: # (new in 0.88)
  Enabled: true
Style/ClassEqualityComparison: # (new in 0.93)
  Enabled: true
Style/CombinableLoops: # (new in 0.90)
  Enabled: true
Style/ExplicitBlockArgument: # (new in 0.89)
  Enabled: true
Style/ExponentialNotation: # (new in 0.82)
  Enabled: true
Style/GlobalStdStream: # (new in 0.89)
  Enabled: true
Style/HashAsLastArrayItem: # (new in 0.88)
  Enabled: true
Style/HashEachMethods: # (new in 0.80)
  Enabled: true
Style/HashLikeCase: # (new in 0.88)
  Enabled: true
Style/HashTransformKeys: # (new in 0.80)
  Enabled: true
Style/HashTransformValues: # (new in 0.80)
  Enabled: true
Style/KeywordParametersOrder: # (new in 0.90)
  Enabled: true
Style/OptionalBooleanParameter: # (new in 0.89)
  Enabled: false
Style/RedundantAssignment: # (new in 0.87)
  Enabled: true
Style/RedundantFetchBlock: # (new in 0.86)
  Enabled: true
Style/RedundantFileExtensionInRequire: # (new in 0.88)
  Enabled: true
Style/RedundantRegexpCharacterClass: # (new in 0.85)
  Enabled: true
Style/RedundantRegexpEscape: # (new in 0.85)
  Enabled: true
Style/RedundantSelfAssignment: # (new in 0.90)
  Enabled: true
Style/SingleArgumentDig: # (new in 0.89)
  Enabled: true
Style/SlicingWithRange: # (new in 0.83)
  Enabled: true
Style/SoleNestedConditional: # (new in 0.89)
  Enabled: false
Style/StringConcatenation: # (new in 0.89)
  Enabled: true
